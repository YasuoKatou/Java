<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yks.ticket.lite.dao.ProjectStatusDao">
  <resultMap id="projectStatusResultMap" type="yks.ticket.lite.entity.ProjectStatusEntity" autoMapping="true">
  </resultMap>

  <select id="findByProject" resultMap="projectStatusResultMap">
    select
        id
      , disp_seq dispSeq
      , name
      , versionNo
    from t_proj_stat
    where project_id = #{projectId}
      and available = 'yes'
    order by disp_seq
  </select>

  <update id="updateProject2NotUse">
    update t_proj_stat set
        available = 'no'
      , versionNo = versionNo + 1
    where project_id = #{projectId}
  </update>

  <update id="updateStatus">
    update t_proj_stat set
        disp_seq = #{dispSeq}
      , name = #{name}
      , available = #{available}
      , updateDate = CURRENT_TIMESTAMP
      , updateUserId = #{updateUserId}
    where project_id = #{projectId}
      and id = #{id}
  </update>

  <update id="appendStatus">
    insert into t_proj_stat (
        project_id   --プロジェクトID
      , id           --識別子
      , disp_seq     --表示順
      , name         --ステータス名称
      , available    --有効フラグ
      , createUserId --作成者ID
      , updateUserId --更新者ID
    ) values (
        #{projectId}
      , #{id}
      , #{dispSeq}
      , #{name}
      , #{available}
      , #{createUserId}
      , #{createUserId}
    )
  </update>

  <select id="getNextStatusId" resultType="Long">
    select coalesce(max(id), 0) + 1
    from t_proj_stat
    where project_id = #{projectId}
  </select>
</mapper>